<p>
<p><span>
    MicroBlocks is a blocks programming language for physical computing inspired by <a href="https://scratch.mit.edu" target="_blank">Scratch</a>.
    It runs on microcontrollers such as the
    <a href="https://microbit.org" target="_blank">micro:bit</a>,
    <a href="https://calliope.cc/en" target="_blank">Calliope mini</a>,
    <a href="https://www.adafruit.com/product/3333" target="_blank">AdaFruit Circuit Playground Express</a>,
    <a href="http://www.nodemcu.com/index_en.html" target="_blank">NodeMCU</a>,
    <a href="https://m5stack.com/collections/m5-core/products/grey-development-core" target="_blank">M5 Stack</a>,
    and many others.
</span></p>

<h1 id="whatsspecial">What makes it special?</h1>
<div class="pillar">
    <div class="pillars-text">
        <h2>Click to Explore</h2>
        <span>
            MicroBlocks is a live environment.
            Click on a block and it runs immediately, right on the board.
            Try out commands. See and graph sensor values in real time.
            No more waiting for code to compile and download.
        </span>
    </div>
    <video class="pillars-video" loop autoplay muted>
        <source src="liveness.mp4" type="video/mp4">
    </video>
</div>
<div class="pillar">
    <div class="pillars-text">
        <h2>Multitask Naturally</h2>
        <span>
            Want to display an animation while controling a motor? No problem!
            MicroBlocks lets you write separate scripts for each task and run them
            at the same time. Your code is simpler to write and easier to understand.
        </span>
    </div>
    <video class="pillars-video" loop autoplay muted>
        <source src="concurrency.mp4" type="video/mp4">
    </video>
</div>
<div class="pillar">
    <div class="pillars-text">
        <h2>Run Everywhere</h2>
        <span>
            MicroBlocks runs on many different boards, but your scripts are portable.
            Buttons, sensors, and display blocks behave the same on all boards with the relevant hardware.
            MicroBlocks even simulates the micro:bit 5x5 LED display on TFT displays.
        </span>
    </div>
    <video class="pillars-video" loop autoplay muted>
        <source src="portability.mp4" type="video/mp4">
    </video>
</div>
<div class="pillar">
    <div class="pillars-text">
        <h2>Unplug and go!</h2>
        <span>
			MicroBlocks downloads your code as you write it.
            When you like what your program does, just unplug the board and you're good to go.
            Make a game, a fitness app, or light-up clothing that goes wherever you do.
        </span>
    </div>
    <video class="pillars-video" loop autoplay muted>
        <source src="autonomy.mp4" type="video/mp4">
    </video>
</div>
<!--
<div class="pillar">
    <div class="pillars-text">
        <h2>Plug in to share</h2>
        <span>
            With MicroBlocks, the board acts like a memory stick.
            No need for files; just plug in a board and the scripts reappear.
            Hand your board to a friend so they can explore your code.
            They might even add a cool new feature!
        </span>
    </div>
    <video class="pillars-video" loop autoplay muted>
        <source src="decompiler.mp4" type="video/mp4">
    </video>
</div>
-->

<h1 id="intro">Combining Liveness and Autonomy</h1>
<p><span>
MicroBlocks provides the liveness of a tethered blocks programming system such as
<a href="http://snap4arduino.rocks" target="_blank">Snap4Arduino</a>,
making it easy to get started, encouraging experimentation, and fostering deep engagement.
MicroBlocks compiles and downloads your scripts as you work, so you never have to wait.
You can even change a script while it is running and see the effect immediately.
</span></p>

<p><span>
Unlike tethered systems, MicroBlocks code runs on the microcontroller, not the host computer.
This autonomy allows MicroBlocks to do things that require precise timing, such as generating
music by toggling a pin or decoding the signal from a television remote control.
Tethered systems are unable to do those things because the latency and jitter of
the USB serial connection makes such precise timing impossible.
</span></p>

<p><span>
Because MicroBlocks is not dependent on the host computer for execution,
the program continues to run when the microcontroller is untethered and powered by a battery.
That supports applications like animated costumes, self-contained
art projects, interactive signs, pocket games, and remote data collection.
For example, you might use MicroBlocks to record the G-forces in a model rocket.
</span></p>

<p><span>
In the past, users had to choose between tethered and compilation-based programming systems.
Tethered systems provide liveness but cannot do precise timing and are forwever dependent on their host computer.
Compilation-based systems provide precise timing and autonomous operation,
but require a tedious wait after every code change for the program to compile and download.
</span></p>

<p><span>
MicroBlocks combines the liveness of a tethered system
with autonomous program execution on the microcontroller.
With MicroBlocks, you no longer need to choose; you can have the best of both worlds!
</span></p>

<h2>Next Steps</h2>

<p><span>
Visit the <a href="download">Download</a> page to download the MicroBlocks app
for Windows, MacOS, Linux, or Raspberry Pi.
If you have a Chromebook, you can get the
<a href="https://chrome.google.com/webstore/detail/microblocks/cbmcbhgijipgdmlnieolilhghfmnngbb">Chromebook App</a>.
</span></p>

<p><span>
You can also
<a href="https://microblocks.fun/run/microblocks.html">run MicroBlocks in a Chrome or Edge browser</a>
without installing anything.
To allow MicroBlocks to connect to your board,
you'll need visit the "chrome://flags" page and enable the "Experimental Web Platform features" flag.
See
<a href="http://microblocks.fun/blog-2020-05-24-Running-MicroBlocks-in-the-Browser">Running MicroBlocks in the Browser</a>.
</span></p>

<h2>Activity Cards</h2>

<p><span>
Visit the <a href="learn">Learn</a> section to find activity cards that
will help you get started and then explore projects involving animation, colorful LEDs,
sound, servo motors, communications, remote control, Internet of Things and more.
</span></p>
