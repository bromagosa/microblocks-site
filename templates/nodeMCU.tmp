<h1 id="nodeMCU">NodeMCU Setup</h1>

<p><span>
These notes are for advanced users who want to work with MicroBlocks on
the NodeMCU and are comfortable with the extra technical challenges involved.
</span></p>

<h2>The NodeMCU</h2>

<p><span>
The NodeMCU is an inexpensive board based on the Espressif ESP8266
that includes a WiFi radio, 32-bit processor,
eight digital I/O pins, and one analog input pin.
The NodeMUC doesn't have many built in capabilities (just a user LED) so
most interesting applications require connecting external components.
The need for wiring makes the NodeMCU less appropriate for younger children
and beginners than boards with more built-in features.
</span></p>

<h2>NodeMCU Pins</h2>

<p><span>
MicroBlocks uses the digital pins marked D0 through D8
and the analog input pin marked A0 on most NodeMCU and other ESP8266 boards:
</span></p>

<p><span><img src="https://i1.wp.com/www.teachmemicro.com/wp-content/uploads/2018/04/NodeMCUv3.0-pinout.jpg" width="450"></span></p>

<p><span>
(Note: Earlier version of MicroBlocks used the GPIO pin numbers.
However, for ease of use, it switched to using the pin numbers printed on the board.
MicroBlocks programs for the NodeMCU written before that change will need to be updated
to use the new pin numbers.)
</span></p>

<p><span>
For example, pin 0 is the top-right pin in the picture (GPIO16).
On many ESP8266 boards, that pin also toggles the user LED.
The sense of the user LED on many ESP8266 boards is inverted:
setting the LED's pin to "false" turns the LED on.
If pin 0 does not control an LED on your board, try the other digital pins.
There are dozens of different ESP8266 boards and, unfortunately,
they use a variety of pins for the user LED.
</span></p>

<p><span>
Most ESP8266 boards have two buttons.
One of them, usually marked "RST", "Reset", or "EN", is the hardware reset button.
The other button, usually marked "Flash", sometimes needs to be held down to force the
chip into bootloader mode when installing firmware (not necessary on well-designed
boards), but can also be used as "Button A" in MicroBlocks. It is connected
to pin 3. That pin has a pull up resistor so it is high ("true" in MicroBlocks)
when the button is NOT pressed and goes low ("false") when the button is pressed.
</span></p>

<p><span>
The Node MCU has a single analog input pin, marked "A0" on the board (top-left in the picture).
That pin is analog input-only; it can't be used as an output.
</span></p>

<h2>Serial Setup</h3>

<p><span>On some systems, you may need to install a serial driver.
Depending on the USB-serial chip on your board you may need
<a href="https://github.com/nodemcu/nodemcu-devkit/tree/master/Drivers">CH340G driver</a> or
<a href="https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers">Silcon Labs CP210x driver</a>.
</span></p>

<p><span>On Linux, add yourself to the "dialout" group by running this in a terminal:
<pre>
sudo usermod -G dialout -a `whoami`
</pre>
</span></p>

<h2>Installing MicroBlocks Firmware</h2>

<p><span>
<strong>Chromebook note</strong>: Currently, it is
not possible install the MicroBlocks firmware on ESP32 boards from a Chromebook.
However, a Windows, Mac, or Linux laptop can be used to install the MicroBlocks firmware,
and then the board can be used with MicroBlocks on Chromebooks.
</span></p>

<p><span>
To install the MicroBlocks firmware on an ESP8266 board,
launch MicroBlocks and plug in the board.
From the MicroBlocks (gear) menu, select "install firmware on board":
</span></p>

<p><span><img src="UpdateFirmware.png" width="250"></span></p>

<p><span>
Then select "ESP8266":
</span></p>

<p><span><img src="selectESP8266.png" width="200"></span></p>

<p><span>
As the firmware loads, you will see a progress screen:
</span></p>

<p><span><img src="espFlashing.png" width="400"></span></p>

<p><span>
Once the firmware is installed, a green circle should appear to show that the board is connected.
</span></p>

<p><span><img src="Connected.png" width="50"></span></p>

<p><span>
That may take a few seconds. In rare cases you may need to disconnect and reconnect the board.
</span></p>

<p><span>To verify that everything is working, try the following:</span></p>

<p><span><img src="SetUserLEDBlock.png" width="150" alt="SetUserLEDBlock.png"></span></p>

<p><span>The user LED on your board should light up, showing that the board is connected.
You're ready to code!</span></p>
