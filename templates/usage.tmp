<h1 id="usage">Usage</h1>
<h2>Preparing your System</h2>
<h3>Windows</h3>
<p><span>If you are running a version of Windows earlier than Windows 10, you may need to install USB-serial drivers for your board. In the case of the micro:bit, you can follow these instructions:</span></p>
<p><span><a href="https://support.microbit.org/support/solutions/articles/19000022103-how-do-i-use-the-serial-port-with-a-micro-bit-on-windows" target="_blank">https://support.microbit.org/support/solutions/articles/19000022103-how-do-i-use-the-serial-port-with-a-micro-bit-on-windows</a></span></p>
<p><span>Be sure to plug in the board before you run the driver installer.</span></p>
<p><span>With the board plugged in, you can check the COM ports in the device manager to find out which COM port is it connected to. We've seen COM3, COM5, and COM6 on various laptops.</span></p>
<h3>GNU/Linux</h3>
<p><span>On many Linux systems, users don’t have access to the USB serial port by default, so you will get an error when you try to open it. One quick solution to that is to launch MicroBlocks from the command line using “sudo”:</span></p>
<pre>sudo ./ublocks-linux64bit</pre>
<p><span>A more convenient long term solution is to add yourself to the group that owns the serial port as follows.</span></p>
<p><span>First, with the board attached, display the serial port entry with the command:</span></p>
<pre>ls -l /dev/tty[AU]*</pre>
<p><span>You'll see a line such as:</span></p>
<pre>crw-rw---- 1 root dialout 166, 0 Jan 25 07:23 /dev/ttyACM0</pre>
<p><span>The serial port’s group is the word after “root”, in this case “dialout”. Add yourself to that group:</span></p>
<pre>sudo usermod -G dialout -a [YOUR_USER_NAME]</pre>
<p><span>then log out and back in to make the change take effect.</span></p>
<p><span>Once this is done, you can start MicroBlocks simply by double-clicking on the Linux executable. Note that it still can be useful to run MicroBlocks from the terminal when debugging, since the “print” block logs messages to the terminal window.</span></p>
<h3>Fedora 28</h3>
<p><span>The libjpeg8 package is missing from the Fedora 28 repositories, so you will need to install it manually. You can download it from <a href="http://rpm.pbone.net/index.php3/stat/3/srodzaj/2/search/libjpeg8-8d-3.1.src.rpm">here</a>.</span></p>
<p><span>Open a terminal and rebuild the RPM package for Fedora 28:</span></p>
<pre>rpmbuild --rebuild libjpeg8-8d-3.1.src.rpm</pre>
<p><span>You can now install the rebuilt package, found under ~/rpmbuild/RPMS/x86_64:</span></p>
<pre>sudo rpm -ivh ~/rpmbuild/RPMS/x86_64/libjpeg8-8d-3.1.x86_64.rpm</pre>
<p><span>After this package has been installed, follow the generic GNU/Linux instructions.</span></p>
<h2>VM Installation</h2>
<p><span>If you have a BBC micro:bit, Calliope mini, or an AdaFruit board such as the Circuit Playground Express that supports loading binary files by drag-and-drop, you can just drop the appropriate .hex or .uf2 file onto the virtual disk for your board to install it.</span></p>
<p><span>If you have an ARM-based Arduino or any other board with Arduino IDE support, or if you just want to build the virtual machine yourself, read on.</span></p>
<p><span>The MicroBlocks virtual machine is written in C and C++. The Arduino platform is preferred, but it has also been built using the mbed platform (not supported). It can also be built for Linux-based environments such as the Raspberry Pi, and it should be portable to other platforms that have a C compiler with minimal effort.</span></p>
<p><span>The MicroBlocks virtual machine can be compiled and loaded onto a board using the Arduino IDE (version 1.8 or later) with the appropriate board installed and selected. Open the file "vm.ino", select your board from the board manager, and click the upload button.</span></p>
<h2>Connecting to the Board</h2>
<h3>MicroBlocks standalone IDE</h3>
<p><span>Start MicroBlocks by double-clicking the executable for your platform
(e.g. ublocks-win.exe), then click on the "Connect" button on top of the app and select the USB serial port from the menu:</span></p>
<p><img src="connect.png"></p>
<p><span>Port names differ for each platform. In GNU/Linux your port names will start with "ttyACM" or "ttyUSB", in MacOSX they start with "cu.usbmodem" or "tty.usbmodem", and in Windows they start with "COM". In Windows, the correct port is usually the last one.</span></p>
<p><span>If you don't get an error, you should be connected to the board, and the indicator will change from red to green:</span></p>
<p><img src="connected.png"></p>
<p><span>To ensure everything is working, right click on the green indicator and select "virtual machine version":</span></p>
<p><img src="vmversion.png"></p>
<p><span>A small dialog should pop up showing the version of the virtual machine installed in your board.</span></p>
