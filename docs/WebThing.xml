<blocks app="Snap! 5.1, http://snap.berkeley.edu" version="1"><block-definition s="%&apos;method&apos; url: %&apos;url&apos; send: %&apos;payload&apos; headers: %&apos;headers&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">GET<options>GET&#xD;POST&#xD;PUT&#xD;DELETE</options></input><input type="%s">http://snap.berkeley.edu</input><input type="%s"></input><input type="%mult%l" readonly="true"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>method</l><l>url</l><l>data</l><l>headers</l><l>proc</l></list><l>var response, i, header;&#xD;if (!proc.httpRequest) {&#xD;  proc.httpRequest = new XMLHttpRequest();&#xD;  proc.httpRequest.open(method, url, true);&#xD;  proc.assertType(headers, &apos;list&apos;);&#xD;  for (i = 1; i &lt;= headers.length(); i += 1) {&#xD;    header = headers.at(i);&#xD;    proc.assertType(header, &apos;list&apos;);&#xD;    proc.httpRequest.setRequestHeader(&#xD;      header.at(1),&#xD;      header.at(2)&#xD;    );&#xD;  }&#xD;  proc.httpRequest.send(data || null);&#xD;} else if (proc.httpRequest.readyState === 4) {&#xD;  response = proc.httpRequest.responseText;&#xD;  proc.httpRequest = null;&#xD;  return response;&#xD;}&#xD;proc.pushContext(&apos;doYield&apos;);&#xD;proc.pushContext();</l></block><list><block var="method"/><block var="url"/><block var="payload"/><block var="headers"/></list></block></block></script></block-definition><block-definition s="key: %&apos;key&apos; value: %&apos;value&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="reportNewList"><list><block var="key"/><block var="value"/></list></block></block></script></block-definition><block-definition s="stringify %&apos;blah&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>blah</l></list><l>return blah.asJSON()</l></block><list><block s="reportNewList"><list><block var="blah"/></list></block></list></block></block></script></block-definition><block-definition s="set property %&apos;property&apos; to %&apos;value&apos; for webThing at %&apos;url&apos;" type="command" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block s="reportLetter"><l>1</l><block var="url"/></block><l>h</l></block></block><script><block s="doSetVar"><l>url</l><block s="reportJoinWords"><list><l>http://</l><block var="url"/></list></block></block></script></block><block s="doSetVar"><l>a</l><custom-block s="%s url: %s send: %s headers: %mult%l"><l>PUT</l><block s="reportJoinWords"><list><block var="url"/><l>/properties/</l><block var="property"/></list></block><custom-block s="stringify %s"><block s="reportNewList"><list><block var="property"/><block var="value"/></list></block></custom-block><list><custom-block s="key: %s value: %s"><l>Accept</l><l>application/json</l></custom-block></list></custom-block></block></script></block-definition><block-definition s="get property %&apos;property&apos; from webThing at %&apos;url&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doIf"><block s="reportNot"><block s="reportEquals"><block s="reportLetter"><l>1</l><block var="url"/></block><l>h</l></block></block><script><block s="doSetVar"><l>url</l><block s="reportJoinWords"><list><l>http://</l><block var="url"/></list></block></block></script></block><block s="doReport"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportTextSplit"><block s="reportURL"><block s="reportJoinWords"><list><block var="url"/><l>/properties/</l><block var="property"/></list></block></block><l><option>json</option></l></block></block></block></block></script></block-definition><block-definition s="properties of thing at %&apos;url&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>1</l><l/></block></autolambda><list></list></block><block s="reportTextSplit"><custom-block s="%s url: %s send: %s headers: %mult%l"><l>GET</l><block s="reportJoinWords"><list><block var="url"/><l>/properties</l></list></block><l></l><list></list></custom-block><l><option>json</option></l></block></block></block></script></block-definition><block-definition s="name of thing at %&apos;url&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doReport"><block s="reportListItem"><l>2</l><block s="reportFindFirst"><block s="reifyPredicate"><autolambda><block s="reportEquals"><block s="reportListItem"><l>1</l><l/></block><l>name</l></block></autolambda><list></list></block><block s="reportTextSplit"><custom-block s="%s url: %s send: %s headers: %mult%l"><l>GET</l><block var="url"/><l></l><list></list></custom-block><l><option>json</option></l></block></block></block></block></script></block-definition></blocks>